{"version":3,"sources":["../../../../../src/angular2-modal/plugins/vex/src/modal.ts"],"names":[],"mappings":"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","file":"modal.js","sourceRoot":"","sourcesContent":["import { Observable } from 'rxjs';\nimport { combineLatest } from 'rxjs/operator/combineLatest';\n\nimport { Injectable, ResolvedReflectiveProvider as RRP } from '@angular/core';\n\nimport {\n  ContainerContent,\n  Maybe,\n  Overlay,\n  DialogRef,\n  DROP_IN_TYPE,\n  Modal as Modal_,\n  CSSBackdrop,\n  CSSDialogContainer,\n  PromiseCompleter\n} from 'angular2-modal';\n\nimport { DropInPresetBuilder } from './presets/dropin-preset';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst /** @type {?} */ isDoc: boolean = !(typeof document === 'undefined' || !document);\nexport class Modal extends Modal_ {\n/**\n * @param {?} overlay\n */\nconstructor(overlay: Overlay) {\n    super(overlay);\n  }\n/**\n * @return {?}\n */\nalert(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.alert, /** @type {?} */(( {isBlocking: false} as any)));\n  }\n/**\n * @return {?}\n */\nprompt(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.prompt, /** @type {?} */(( {\n      isBlocking: true,\n      keyboard: null\n    }  as any)));\n  }\n/**\n * @return {?}\n */\nconfirm(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.confirm, /** @type {?} */(( {\n      isBlocking: true,\n      keyboard: null\n    }  as any)));\n  }\n/**\n * @param {?} dialogRef\n * @param {?} content\n * @param {?=} bindings\n * @return {?}\n */\nprotected create(dialogRef: DialogRef<any>,\n                   content: ContainerContent,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n\n    const /** @type {?} */ backdropRef = this.createBackdrop(dialogRef, CSSBackdrop);\n    const /** @type {?} */ containerRef = this.createContainer(dialogRef, CSSDialogContainer, content, bindings);\n\n    let /** @type {?} */ overlay = dialogRef.overlayRef.instance;\n    let /** @type {?} */ backdrop = backdropRef.instance;\n    let /** @type {?} */ container = containerRef.instance;\n\n    dialogRef.inElement ? overlay.insideElement() : overlay.fullscreen();\n\n    // add body class if this is the only dialog in the stack\n    if (isDoc && !document.body.classList.contains('vex-open')) {\n      document.body.classList.add('vex-open');\n    }\n\n    overlay.addClass(`vex vex-theme-${dialogRef.context.className}`);\n    backdrop.addClass('vex-overlay');\n    container.addClass(dialogRef.context.contentClassName);\n    container.setStyle('display', 'block');\n    if (dialogRef.inElement) {\n      overlay.setStyle('padding', '0');\n      container.setStyle('margin-top', '20px');\n    }\n\n    if (containerRef.location.nativeElement) {\n      containerRef.location.nativeElement.focus();\n    }\n\n    if (dialogRef.context.className === 'bottom-right-corner') {\n      overlay.setStyle('overflow-y', 'hidden');\n      container.setStyle('position', 'absolute');\n    }\n\n    overlay.beforeDestroy(() => {\n      overlay.addClass('vex-closing');\n      const /** @type {?} */ completer = new PromiseCompleter<void>();\n\n      let /** @type {?} */ animationEnd$: Observable<any> = container.myAnimationEnd$();\n      if (dialogRef.context.className !== 'bottom-right-corner') {\n        animationEnd$ = combineLatest.call(animationEnd$, backdrop.myAnimationEnd$(), (s1, s2) => [s1,s2] );\n      }\n\n      animationEnd$.subscribe( sources => {\n        isDoc && this.overlay.groupStackLength(dialogRef) === 1 && document.body.classList.remove('vex-open');\n        completer.resolve();\n      });\n\n      return completer.promise;\n    });\n\n\n    overlay.setClickBoundary(containerRef.location.nativeElement);\n\n    return dialogRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n];\n}\n\nfunction Modal_tsickle_Closure_declarations() {\n/** @type {?} */\nModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModal.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}